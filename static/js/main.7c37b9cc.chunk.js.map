{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","types/utils/todoFilter.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onSelectTodo","className","map","todo","id","title","completed","cn","type","onClick","TodoFilter","onSetQuery","onSetFilter","query","filter","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","isLoading","setIsLoading","errorMessage","setErrorMessage","useEffect","userId","userFromServer","catch","error","message","finally","href","name","App","todosFromServer","setTodosFromServer","setSelectedTodo","setFilter","setQuery","filteredTodo","param","todosCopy","toLocaleLowerCase","includes","todoFilter","newQuery","trim","newFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c37b9cc.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelectTodo(selectedTodo: Todo): void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          title,\n          completed,\n        } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={cn(\n              { 'has-background-info-light': selectedTodo?.id === id },\n            )}\n            key={id}\n          >\n            <td className=\"is-vcentered\">\n              {id}\n            </td>\n            <td className=\"is-vcentered\">\n              {completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn(\n                { 'has-text-danger': !completed },\n                { 'has-text-success': completed },\n              )}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn(\n                    'far',\n                    { 'fa-eye-slash': selectedTodo?.id === id },\n                    { 'fa-eye': selectedTodo?.id !== id },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  onSetQuery(newQuery: string): void;\n  onSetFilter(newFilter: string): void;\n  query: string;\n  filter: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onSetQuery,\n  onSetFilter,\n  query,\n  filter,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          value={filter}\n          data-cy=\"statusSelect\"\n          onChange={\n            (event) => onSetFilter(\n              event.target.value,\n            )\n          }\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onSetQuery(event.target.value)}\n      />\n\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query\n       && (\n         <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n           {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n           <button\n             data-cy=\"clearSearchButton\"\n             type=\"button\"\n             className=\"delete\"\n             onClick={() => onSetQuery('')}\n           />\n         </span>\n       )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  onSelectTodo(todo: null): void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onSelectTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    setErrorMessage('');\n    setIsLoading(true);\n\n    if (selectedTodo) {\n      getUser(selectedTodo?.userId)\n        .then(userFromServer => {\n          setUser(userFromServer);\n          setIsLoading(false);\n        })\n        .catch(error => {\n          setErrorMessage(error.message);\n        })\n        .finally(() => setIsLoading(false));\n    } else {\n      setErrorMessage('No selected todo');\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && !user\n        && <Loader />}\n      {!isLoading && !errorMessage\n        && (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => onSelectTodo(null)}\n                data-cy=\"modal-close\"\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\">\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { todoFilter } from './types/utils/todoFilter';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState('All');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setErrorMessage('');\n    setIsLoading(true);\n\n    getTodos()\n      .then(todos => {\n        setTodosFromServer(todos);\n      })\n      .catch(error => {\n        setErrorMessage(error.message);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const onSelectTodo = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  const onSetQuery = (newQuery: string) => {\n    setQuery(newQuery.trim());\n  };\n\n  const onSetFilter = (newFilter: string) => {\n    setFilter(newFilter);\n  };\n\n  const filteredTodo = todoFilter(filter, query, todosFromServer);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSetQuery={onSetQuery}\n                onSetFilter={onSetFilter}\n                query={query}\n                filter={filter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                && <Loader />}\n              {!isLoading && !errorMessage\n                && (\n                  <TodoList\n                    todos={filteredTodo}\n                    selectedTodo={selectedTodo}\n                    onSelectTodo={onSelectTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n        && (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            onSelectTodo={onSelectTodo}\n          />\n        )}\n    </>\n  );\n};\n","import { Todo } from '../Todo';\n\nexport const todoFilter = (param: string, query: string, todos: Todo[]) => {\n  let todosCopy = [...todos];\n\n  switch (param) {\n    case 'active':\n      todosCopy = todosCopy.filter(todo => !todo.completed);\n      break;\n\n    case 'completed':\n      todosCopy = todosCopy.filter(todo => todo.completed);\n      break;\n\n    default:\n      break;\n  }\n\n  if (query) {\n    todosCopy = todosCopy\n      .filter(todo => todo.title.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase()));\n  }\n\n  return todosCopy;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}